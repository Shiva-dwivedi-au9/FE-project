[{"E:\\Projects\\Movie-project3\\src\\index.js":"1","E:\\Projects\\Movie-project3\\src\\Component\\MovieDetails.js":"2","E:\\Projects\\Movie-project3\\src\\Component\\Trending.js":"3","E:\\Projects\\Movie-project3\\src\\Component\\MovieDisplay.js":"4","E:\\Projects\\Movie-project3\\src\\Component\\Contact.js":"5","E:\\Projects\\Movie-project3\\src\\Component\\tv.js":"6","E:\\Projects\\Movie-project3\\src\\Main.js":"7","E:\\Projects\\Movie-project3\\src\\Component\\Routing.js":"8","E:\\Projects\\Movie-project3\\src\\Component\\MovieCredits.js":"9","E:\\Projects\\Movie-project3\\src\\App.js":"10","E:\\Projects\\Movie-project3\\src\\Component\\Glogin.js":"11","E:\\Projects\\Movie-project3\\src\\Component\\Header.js":"12","E:\\Projects\\Movie-project3\\src\\Component\\tvdetails.js":"13","E:\\Projects\\Movie-project3\\src\\Component\\Footer.js":"14","E:\\Projects\\Movie-project3\\src\\Component\\tvcredits.js":"15","E:\\Projects\\Movie-project3\\src\\Component\\RecommendedMovies.js":"16","E:\\Projects\\Movie-project3\\src\\Component\\similerseries.js":"17","E:\\Projects\\Movie-project3\\src\\Search.js":"18","E:\\Projects\\Movie-project3\\src\\reportWebVitals.js":"19"},{"size":538,"mtime":1610280139813,"results":"20","hashOfConfig":"21"},{"size":5338,"mtime":1610281116348,"results":"22","hashOfConfig":"21"},{"size":2848,"mtime":1610346132393,"results":"23","hashOfConfig":"21"},{"size":2774,"mtime":1610280139607,"results":"24","hashOfConfig":"21"},{"size":151,"mtime":1610280139599,"results":"25","hashOfConfig":"21"},{"size":2805,"mtime":1610365143053,"results":"26","hashOfConfig":"21"},{"size":842,"mtime":1610361468719,"results":"27","hashOfConfig":"21"},{"size":950,"mtime":1610365037742,"results":"28","hashOfConfig":"21"},{"size":1720,"mtime":1610343006506,"results":"29","hashOfConfig":"21"},{"size":4136,"mtime":1610280139599,"results":"30","hashOfConfig":"21"},{"size":0,"mtime":1610352745845,"results":"31","hashOfConfig":"21"},{"size":759,"mtime":1610350981602,"results":"32","hashOfConfig":"21"},{"size":5069,"mtime":1610361940230,"results":"33","hashOfConfig":"21"},{"size":304,"mtime":1610280139603,"results":"34","hashOfConfig":"21"},{"size":1717,"mtime":1610353955836,"results":"35","hashOfConfig":"21"},{"size":0,"mtime":1610364439056,"results":"36","hashOfConfig":"21"},{"size":1904,"mtime":1610361835099,"results":"37","hashOfConfig":"21"},{"size":1729,"mtime":1610280139811,"results":"38","hashOfConfig":"21"},{"size":375,"mtime":1610280139813,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"e0g9n4",{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Projects\\Movie-project3\\src\\index.js",[],["84","85"],"E:\\Projects\\Movie-project3\\src\\Component\\MovieDetails.js",["86","87"],"import React, { Component } from 'react'\r\nimport SimilarMovies from './SimilarMovies'\r\nimport Movies from './RecommendedMovies'\r\nimport Credit from './MovieCredits'\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport StarRatings from 'react-star-ratings';\r\nimport ModalVideo from 'react-modal-video'\r\nimport '../Modal.scss'\r\n\r\nconst api_key = \"api_key=76a3351cce68be3d7eaa350f43ad5644\"\r\nconst TrailerUrl = \"https://api.themoviedb.org/3/movie/\"\r\nconst YoutubeUrl = \"https://www.youtube.com/embed/\"\r\nconst ImgUrl = \"https://image.tmdb.org/t/p/w300\"\r\n\r\nexport default class MovieDetails extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            videos : \"\",\r\n            moreDetails:\"\",\r\n            isOpen: false\r\n        }\r\n        this.openModal = this.openModal.bind(this)\r\n    }\r\n    openModal () {\r\n        this.setState({isOpen: true})\r\n      }\r\n    \r\n        renderDetails = (moreDetails) => {\r\n            \r\n            if(moreDetails) {\r\n               const key = sessionStorage.getItem(\"itemKey\")\r\n               \r\n              return(\r\n                  <div>\r\n                       <ModalVideo channel='youtube' isOpen={this.state.isOpen} videoId={key} onClose={() => this.setState({isOpen: false})} />\r\n                  <div style={{display:\"flex\",backgroundColor:' rgba(12, 4, 12, 0.900)',backdropFilter:'blur(5px)'}}>\r\n                 <img onClick={this.openModal} style={{margin:\"30px\",cursor:\"pointer\"}} src={`${ImgUrl}/${moreDetails.poster_path}`} alt=\"pic not available\"></img>\r\n                      \r\n                      <div style={{display:\"block\"}}>\r\n                            <h2 style={{color:\"turquoise\",fontSize:\"30px\"}}>{moreDetails.tagline}</h2>\r\n                            <h1>{moreDetails.original_title}</h1>\r\n                            <h2 style={{color:\"teal\",fontWeight:\"bold\"}}><span style={{color:\"silver\"}}>Runtime : </span>{moreDetails.runtime} mins</h2>\r\n                            <StarRatings\r\n                                    rating={moreDetails.vote_average}\r\n                                    starRatedColor=\"blue\"\r\n                                    numberOfStars={10}\r\n                                    name='rating'\r\n                                    starDimension=\"40px\"\r\n                                    starSpacing=\"10px\"\r\n                            />\r\n                            <p style={{color:\"teal\",fontSize:\"20px\",fontWeight:\"bold\"}}>{moreDetails.overview}</p>\r\n                           \r\n                      </div>\r\n                  </div>\r\n                  </div>\r\n              )\r\n            }\r\n        }\r\n\r\n        renderVideos =(videos) => {\r\n            if(videos) {\r\n                \r\n                return videos.results.map((item) => {\r\n                    sessionStorage.setItem(\"itemKey\",item.key)\r\n                    return(\r\n                        <div style={{textAlign:'center'}}>\r\n                            <h1>Name : {item.name}</h1>\r\n                            <h2 style={{color:\"white\"}}>Source : {item.site}</h2>\r\n                            <h3 style={{textAlign:\"center\"}}><iframe width=\"800\" height=\"500\" src={`${YoutubeUrl}/${item.key}`} frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></h3>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n    \r\n        }\r\n    handleBack = (e) => {\r\n        sessionStorage.removeItem(\"id\")\r\n        this.props.history.push(\"/\")\r\n    }\r\n    render() {\r\n        console.log(this.state.moreDetails)\r\n        return (\r\n            <div>\r\n\r\n                {this.renderDetails(this.state.moreDetails)}\r\n                <button onClick={this.handleBack}>Go back</button>\r\n                \r\n                <Tabs>\r\n                    <TabList>\r\n                            <Tab  style={{fontSize:\"25px\",fontWeight:\"bold\"}}>Cast</Tab>\r\n                            <Tab style={{fontSize:\"25px\",fontWeight:\"bold\"}}>Similar Movies</Tab>\r\n                            <Tab  style={{fontSize:\"25px\",fontWeight:\"bold\"}}>Recommended Movies</Tab>\r\n                            <Tab  style={{fontSize:\"25px\",fontWeight:\"bold\"}}>Videos</Tab>\r\n\r\n                    </TabList>\r\n\r\n                    <TabPanel>\r\n                    <Credit />\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                            <SimilarMovies />\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                          <Movies />\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                          {this.renderVideos(this.state.videos)}\r\n                    </TabPanel>\r\n                </Tabs>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount(){\r\n        const id = sessionStorage.getItem(\"id\")\r\n        URL = TrailerUrl + id +  \"/videos?\"+ api_key + \"&language=en-US\"\r\n\r\n       const  detailUrl = TrailerUrl  + id + \"?\" + api_key + \"&language=en-US\"\r\n       \r\n        fetch(URL)\r\n        .then((res) => res.json())\r\n        .then((data) => this.setState({videos:data}))\r\n\r\n        fetch(detailUrl)\r\n        .then((res) => res.json())\r\n        .then((data) => this.setState({moreDetails:data}))\r\n\r\n    }\r\n}\r\n","E:\\Projects\\Movie-project3\\src\\Component\\Trending.js",["88","89"],"import React, { Component } from 'react'\r\nimport  '../Main.css'\r\nimport {Link} from 'react-router-dom'\r\nimport StarRatings from 'react-star-ratings';\r\nimport loader from '../Images/loader.gif'\r\nconst TrendingUrl = \"https://api.themoviedb.org/3/trending/all/day?api_key=76a3351cce68be3d7eaa350f43ad5644\"\r\nconst ImgUrl = \"https://image.tmdb.org/t/p/w300\"\r\n\r\n\r\nexport default class Trending extends Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            trending:\"\"\r\n        }\r\n      }\r\n      \r\n      renderTrending=(data) => {\r\n        if(data){\r\n          return data.results.map((item) => {\r\n            const  viewMore = (e) =>{\r\n              sessionStorage.setItem(\"id\",item.id)  \r\n            }\r\n            return(\r\n              < div className=\"responsive\" style={{backgroundColor:' rgba(12, 4, 12, 0.900)',backdropFilter:'blur(5px)',margin:\"10px\",width:\"400px\",height:\"100%\"}} >\r\n                 <h2 style={{color:\"green\",textAlign:\"center\"}} key={item.id}>||| {item.original_name}{item.title} |||</h2>\r\n                <Link onClick={viewMore} to={`/details/${item.id}`}><img style={{margin:\"30px\",padding:\"20px\"}} src={`${ImgUrl}/${item.poster_path}`}></img></Link> \r\n                <div style={{margin:\"55px\"}}>\r\n                    <h4><span style={{color:\"teal\",fontSize:\"20px\"}}>Popularity : </span>  {item.popularity}</h4> \r\n                    <h4><span style={{color:\"teal\",fontSize:\"20px\"}}>Release Date : </span> {item.release_date} {item.first_air_date}</h4>\r\n                    <h4><span style={{color:\"teal\",fontSize:\"20px\"}}>Vote Average: </span> </h4> \r\n                    <StarRatings\r\n                        rating={item.vote_average}\r\n                        starRatedColor=\"blue\"\r\n                        numberOfStars={10}\r\n                        name='rating'\r\n                        starDimension=\"25px\"\r\n                        starSpacing=\"2px\"\r\n                  />\r\n                    <h4><span style={{color:\"teal\",fontSize:\"20px\"}}>Vote Count : </span>{item.vote_count} </h4>\r\n                </div>\r\n              \r\n              </ div>\r\n             \r\n            )\r\n          })\r\n    \r\n        }else{\r\n          return(\r\n            <div>\r\n              <img src={loader} />\r\n            </div>\r\n          )\r\n        }\r\n      }\r\n      \r\n    render() {\r\n        return (\r\n            <div className=\"trending\">\r\n                     <h1>TRENDING</h1>\r\n                     <div  style={{display:\"flex\",flexWrap:\"wrap\",justifyContent:\"center\",alignItems:\"center\"}}>\r\n                    {this.renderTrending(this.state.trending)}\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(TrendingUrl)\r\n        .then((res)=>res.json())\r\n        .then((data) => {\r\n          this.setState({trending:data})\r\n      })\r\n\r\n    }\r\n}","E:\\Projects\\Movie-project3\\src\\Component\\MovieDisplay.js",[],"E:\\Projects\\Movie-project3\\src\\Component\\Contact.js",[],"E:\\Projects\\Movie-project3\\src\\Component\\tv.js",["90","91"],"E:\\Projects\\Movie-project3\\src\\Main.js",[],"E:\\Projects\\Movie-project3\\src\\Component\\Routing.js",["92"],"E:\\Projects\\Movie-project3\\src\\Component\\MovieCredits.js",["93"],"import React, { Component } from 'react'\r\nconst CreditMoviesURL = \"https://api.themoviedb.org/3/movie/\"\r\nconst url2 = \"/credits?api_key=76a3351cce68be3d7eaa350f43ad5644&language=en-US&page=1\"\r\nconst ImgUrl = \"https://image.tmdb.org/t/p/w300\"\r\n\r\nexport default class CreditMovies extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            Credit : \"\"\r\n        }\r\n    }\r\n    renderCredit = (data) => {\r\n        if(data){\r\n          return data.cast.map((item) => {\r\n          \r\n            return(\r\n              < div style={{backgroundColor:' rgba(12, 4, 12, 0.900)',backdropFilter:'blur(5px)',margin:\"10px\",width:\"400px\"}} >\r\n                     <h2 style={{color:\"teal\",textAlign:\"center\"}} key={item.id}>{item.name}</h2>\r\n                     <h2 style={{color:\"white\",textAlign:\"center\"}}>Role played : {item.character}</h2>\r\n                    <img style={{margin:\"30px\",padding:\"20px\"}} src={`${ImgUrl}/${item.profile_path}`}></img>\r\n              </ div>\r\n            )\r\n          })\r\n        }\r\n      }\r\n    render() {\r\n     \r\n        return (\r\n            <div>\r\n                <h1>Credit</h1>\r\n                <div style={{display:\"flex\",flexWrap:\"wrap\",backgroundColor:' rgba(12, 4, 12, 0.719)',backdropFilter:'blur(5px)',justifyContent:\"center\",alignItems:\"center\"}} >\r\n                {this.renderCredit(this.state.Credit)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    componentDidMount(){\r\n        const Credit_id = sessionStorage.getItem(\"id\")\r\n        const CreditURL = CreditMoviesURL  + Credit_id + url2\r\n\r\n        fetch(CreditURL)\r\n        .then((res) => res.json())\r\n        .then((data) => {this.setState({Credit:data})})\r\n    }\r\n}\r\n","E:\\Projects\\Movie-project3\\src\\App.js",["94","95"],"import React, { Component } from 'react'\r\nimport Search from  './Search'\r\nimport './Main.css'\r\nimport {Link} from 'react-router-dom'\r\nimport {Spring} from 'react-spring/renderprops'\r\nimport {Transition} from 'react-spring/renderprops'\r\n\r\n\r\nconst GenreUrl = \"https://api.themoviedb.org/3/genre/movie/list?api_key=76a3351cce68be3d7eaa350f43ad5644&language=en-US\"\r\nconst GenreDetailUrl = \"https://api.themoviedb.org/3/discover/movie?api_key=76a3351cce68be3d7eaa350f43ad5644&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&with_genres=\"\r\nconst ImgUrl = \"https://image.tmdb.org/t/p/w300\"\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n        genre:\"\",\r\n        genreDetail:\"\"\r\n    }\r\n  }\r\n  renderMovies = (data) => {\r\n    if(data){\r\n      return data.results.map((item) => {\r\n        console.log(\"see\",data.results)\r\n        const  viewMore = (e) =>{\r\n          sessionStorage.setItem(\"id\",item.id)\r\n      }\r\n        return(\r\n          <Transition\r\n                items={item} keys={item => item.key}\r\n                from={{ transform: 'translate3d(0,-80px,0)' }}\r\n                enter={{ transform: 'translate3d(0,0px,0)' }}\r\n                leave={{ transform: 'translate3d(0,-80px,0)' }}>\r\n                {item => props => <div style={props}>\r\n                      < div className=\"responsive\" style={{backgroundColor:' rgba(12, 4, 12, 0.900)',backdropFilter:'blur(5px)',margin:\"10px\",width:\"400px\",height:\"600px\"}} >\r\n                              <h2 style={{color:\"green\",textAlign:\"center\"}} key={item.id}>||| {item.original_name}{item.title} |||</h2>\r\n                             <Link onClick={viewMore} to={`/details/${item.id}`}><img style={{margin:\"30px\",padding:\"20px\"}} src={`${ImgUrl}/${item.poster_path}`}></img></Link> \r\n                        </ div></div>}\r\n          </Transition>\r\n         \r\n        )\r\n      })\r\n    }\r\n  }\r\n  renderGenre = (data) => {\r\n    if(data){\r\n      \r\n      return data.genres.map((item) =>{\r\n       this. handleGenre=(e) => {\r\n          sessionStorage.setItem(\"genreid\",item.id)\r\n          const _id = sessionStorage.getItem(\"genreid\")\r\n        \r\n          const  FinalURL = GenreDetailUrl  + _id\r\n          \r\n          fetch(FinalURL)\r\n          .then((res)=>res.json())\r\n          .then((data) => this.setState({genreDetail:data}))\r\n        }\r\n       \r\n          return(\r\n            <div className=\"myButton\" style={{backgroundColor:' rgba(12, 4, 12, 0.900)',backdropFilter:'blur(5px)',margin:\"9px\",width:\"150px\",cursor:\"pointer\",borderRadius:\"50px\",textAlign:\"center\"}}>\r\n                  <h3 onClick={this.handleGenre} style={{padding:\"10px\",color:\"teal\"}} key={item.id} value={item.id}>{item.name}</h3>\r\n            </div>\r\n             \r\n          )\r\n      })\r\n  }\r\n  }\r\n  \r\n\r\n  render() {\r\n  console.log(\"genredata\" , this.state.genreDetail)\r\n    return (\r\n      \r\n      <div className=\"main-container\">\r\n          <Search />\r\n          <Spring\r\n          \r\n          from = { {opacity: 0}}\r\n          to = {{opacity: 1}}\r\n          config = {{ delay: 1100 ,  duration : 1000}}\r\n         >\r\n         {props =>  (\r\n             <div style={props}>\r\n             <h1 style={{textAlign:\"center\"}}>GENRE</h1>\r\n              <div style={{display:\"flex\",flexWrap:\"wrap\",backgroundColor:' rgba(12, 4, 12, 0.719)',backdropFilter:'blur(5px)',justifyContent:\"center\",alignItems:\"center\"}}>\r\n                  {this.renderGenre(this.state.genre)}\r\n              </div>\r\n              </div>\r\n            )}\r\n            </Spring>\r\n         \r\n           \r\n\r\n          <h2 style={{textAlign:\"center\"}}>Get results by Genre here</h2>\r\n          <div style={{display:\"flex\",flexWrap:\"wrap\",backgroundColor:' rgba(12, 4, 12, 0.719)',backdropFilter:'blur(5px)',justifyContent:\"center\",alignItems:\"center\"}} >\r\n              {this.renderMovies(this.state.genreDetail)}\r\n          </div>\r\n         \r\n      </div>\r\n    )\r\n  }\r\n  componentDidMount(){\r\n    fetch(GenreUrl,{method:'GET'})\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n        this.setState({genre:data})\r\n    })\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n","E:\\Projects\\Movie-project3\\src\\Component\\Glogin.js",[],"E:\\Projects\\Movie-project3\\src\\Component\\Header.js",["96"],"E:\\Projects\\Movie-project3\\src\\Component\\tvdetails.js",["97","98"],"import React, { Component } from 'react'\r\nimport Credit from './tvcredits'\r\nimport Similer from './similerseries'\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport StarRatings from 'react-star-ratings';\r\nimport ModalVideo from 'react-modal-video'\r\nimport '../Modal.scss'\r\n\r\nconst api_key = \"api_key=76a3351cce68be3d7eaa350f43ad5644\"\r\nconst TrailerUrl = \"https://api.themoviedb.org/3/tv/\"\r\nconst YoutubeUrl = \"https://www.youtube.com/embed/\"\r\nconst ImgUrl = \"https://image.tmdb.org/t/p/w300\"\r\n\r\nexport default class Tv extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            videos : \"\",\r\n            moreDetails:\"\",\r\n            isOpen: false\r\n        }\r\n        this.openModal = this.openModal.bind(this)\r\n    }\r\n    openModal () {\r\n        this.setState({isOpen: true})\r\n      }\r\n    \r\n        renderDetails = (moreDetails) => {\r\n            \r\n            if(moreDetails) {\r\n               const key = sessionStorage.getItem(\"tvkey\")\r\n               \r\n              return(\r\n                  <div>\r\n                       <ModalVideo channel='youtube' isOpen={this.state.isOpen} videoId={key} onClose={() => this.setState({isOpen: false})} />\r\n                  <div style={{display:\"flex\",backgroundColor:' rgba(12, 4, 12, 0.900)',backdropFilter:'blur(5px)'}}>\r\n                 <img onClick={this.openModal} style={{margin:\"30px\",cursor:\"pointer\"}} src={`${ImgUrl}/${moreDetails.poster_path}`} alt=\"pic not available\"></img>\r\n                      \r\n                      <div style={{display:\"block\"}}>\r\n                            <h2 style={{color:\"turquoise\",fontSize:\"30px\"}}>{moreDetails.tagline}</h2>\r\n                            <h1>{moreDetails.original_title}</h1>\r\n                            <h2 style={{color:\"teal\",fontWeight:\"bold\"}}><span style={{color:\"silver\"}}>Runtime : </span>{moreDetails.runtime} mins</h2>\r\n                            <StarRatings\r\n                                    rating={moreDetails.vote_average}\r\n                                    starRatedColor=\"blue\"\r\n                                    numberOfStars={10}\r\n                                    name='rating'\r\n                                    starDimension=\"40px\"\r\n                                    starSpacing=\"10px\"\r\n                            />\r\n                            <p style={{color:\"teal\",fontSize:\"20px\",fontWeight:\"bold\"}}>{moreDetails.overview}</p>\r\n                           \r\n                      </div>\r\n                  </div>\r\n                  </div>\r\n              )\r\n            }\r\n        }\r\n\r\n        renderVideos =(videos) => {\r\n            if(videos) {\r\n                \r\n                return videos.results.map((item) => {\r\n                    sessionStorage.setItem(\"tvkey\",item.key)\r\n                    return(\r\n                        <div style={{textAlign:'center'}}>\r\n                            <h1>Name : {item.name}</h1>\r\n                            <h2 style={{color:\"white\"}}>Source : {item.site}</h2>\r\n                            <h3 style={{textAlign:\"center\"}}><iframe width=\"800\" height=\"500\" src={`${YoutubeUrl}/${item.key}`} frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></h3>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n    \r\n        }\r\n    handleBack = (e) => {\r\n        sessionStorage.removeItem(\"id\")\r\n        this.props.history.push(\"/\")\r\n    }\r\n    render() {\r\n        console.log(this.state.moreDetails)\r\n        return (\r\n            <div>\r\n\r\n                {this.renderDetails(this.state.moreDetails)}\r\n                <button onClick={this.handleBack}>Go back</button>\r\n                \r\n                <Tabs>\r\n                    <TabList>\r\n                            <Tab  style={{fontSize:\"25px\",fontWeight:\"bold\"}}>Cast</Tab>\r\n                            <Tab style={{fontSize:\"25px\",fontWeight:\"bold\"}}>Trailers and Bloopers</Tab>\r\n                            <Tab style={{fontSize:\"25px\",fontWeight:\"bold\"}}>Similer Tv seies</Tab>\r\n                    </TabList>\r\n\r\n                    <TabPanel>\r\n                    <Credit />\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                          {this.renderVideos(this.state.videos)}\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                          <Similer />\r\n                    </TabPanel>\r\n                </Tabs>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount(){\r\n        const id = sessionStorage.getItem(\"id\")\r\n        URL = TrailerUrl + id +  \"/videos?\"+ api_key + \"&language=en-US\"\r\n\r\n       const  detailUrl = TrailerUrl  + id + \"?\" + api_key + \"&language=en-US\"\r\n       \r\n        fetch(URL)\r\n        .then((res) => res.json())\r\n        .then((data) => this.setState({videos:data}))\r\n\r\n        fetch(detailUrl)\r\n        .then((res) => res.json())\r\n        .then((data) => this.setState({moreDetails:data}))\r\n\r\n    }\r\n}\r\n","E:\\Projects\\Movie-project3\\src\\Component\\Footer.js",[],"E:\\Projects\\Movie-project3\\src\\Component\\tvcredits.js",["99"],"E:\\Projects\\Movie-project3\\src\\Component\\RecommendedMovies.js",[],"E:\\Projects\\Movie-project3\\src\\Component\\similerseries.js",["100"],"E:\\Projects\\Movie-project3\\src\\Search.js",[],"E:\\Projects\\Movie-project3\\src\\reportWebVitals.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":71,"column":62,"nodeType":"107","endLine":71,"endColumn":258},{"ruleId":"101","severity":1,"message":"108","line":118,"column":9,"nodeType":"109","messageId":"110","endLine":118,"endColumn":12},{"ruleId":"111","severity":1,"message":"112","line":28,"column":69,"nodeType":"107","endLine":28,"endColumn":151},{"ruleId":"111","severity":1,"message":"112","line":52,"column":15,"nodeType":"107","endLine":52,"endColumn":35},{"ruleId":"111","severity":1,"message":"112","line":47,"column":59,"nodeType":"107","endLine":47,"endColumn":139},{"ruleId":"111","severity":1,"message":"112","line":73,"column":15,"nodeType":"107","endLine":73,"endColumn":35},{"ruleId":"113","severity":1,"message":"114","line":8,"column":8,"nodeType":"109","messageId":"115","endLine":8,"endColumn":10},{"ruleId":"111","severity":1,"message":"112","line":21,"column":21,"nodeType":"107","endLine":21,"endColumn":104},{"ruleId":"111","severity":1,"message":"112","line":39,"column":82,"nodeType":"107","endLine":39,"endColumn":164},{"ruleId":"116","severity":1,"message":"117","line":51,"column":8,"nodeType":"118","messageId":"119","endLine":51,"endColumn":25,"fix":"120"},{"ruleId":"113","severity":1,"message":"121","line":5,"column":8,"nodeType":"109","messageId":"115","endLine":5,"endColumn":14},{"ruleId":"105","severity":1,"message":"106","line":70,"column":62,"nodeType":"107","endLine":70,"endColumn":258},{"ruleId":"101","severity":1,"message":"108","line":112,"column":9,"nodeType":"109","messageId":"110","endLine":112,"endColumn":12},{"ruleId":"111","severity":1,"message":"112","line":21,"column":21,"nodeType":"107","endLine":21,"endColumn":104},{"ruleId":"111","severity":1,"message":"112","line":24,"column":74,"nodeType":"107","endLine":24,"endColumn":156},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","Read-only global 'URL' should not be modified.","Identifier","nativeReassign","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-unused-vars","'Tv' is defined but never used.","unusedVar","no-whitespace-before-property","Unexpected whitespace before property handleGenre.","MemberExpression","unexpectedWhitespace",{"range":"124","text":"125"},"'Glogin' is defined but never used.","no-global-assign","no-unsafe-negation",[2049,2051],"."]